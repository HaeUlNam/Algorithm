#include<iostream>
#include<vector>
#include<algorithm>
#include<string>

using namespace std;

int letterSize;

string input[7];

string letter[11][7];

vector<int> origin;

char comlet[10][7][6] = {
    //0
    {
        {'0','0','0','0','0','0'},
        {'0','0','1','1','0','0'},
        {'0','1','0','0','1','0'},
        {'0','1','0','0','1','0'},
        {'0','1','0','0','1','0'},
        {'0','0','1','1','0','0'},
        {'0','0','0','0','0','0'},
    },
    //1
    {
        {'0','0','0','0','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','1','1','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','1','1','1','1','0'},
        {'0','0','0','0','1','0'},
        {'0','1','1','1','1','0'},
        {'0','1','0','0','0','0'},
        {'0','1','1','1','1','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','1','1','1','0','0'},
        {'0','0','0','0','1','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','0','1','0'},
        {'0','1','1','1','0','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','1','1','0','0'},
        {'0','1','0','1','0','0'},
        {'1','1','1','1','1','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','1','1','1','1','0'},
        {'0','1','0','0','0','0'},
        {'0','1','1','1','0','0'},
        {'0','0','0','0','1','0'},
        {'0','1','0','0','1','0'},
        {'0','0','1','1','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','1','0','0','0','0'},
        {'0','1','0','0','0','0'},
        {'0','1','1','1','1','0'},
        {'0','1','0','0','1','0'},
        {'0','1','1','1','1','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','1','1','1','1','0'},
        {'0','0','0','0','1','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','1','0','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','0','0','0','0','0'},
        {'0','1','1','1','1','0'},
        {'0','1','0','0','1','0'},
        {'0','1','1','1','1','0'},
        {'0','1','0','0','1','0'},
        {'0','1','1','1','1','0'},
        {'0','0','0','0','0','0'},
    },

    {
        {'0','1','1','1','1','0'},
        {'0','1','0','0','1','0'},
        {'0','1','0','0','1','0'},
        {'0','1','1','1','1','0'},
        {'0','0','0','0','1','0'},
        {'0','0','0','0','1','0'},
        {'0','0','0','0','1','0'},
    }
};

int imgtointeger(string a[7])
{
    bool check = false;
    for(int i = 0; i < 10; i++)
    {
        check = false;
        for(int j = 0; j < 7; j++)
        {
            for(int k = 0; k < 6; k++)
            {
                if(a[j][k] != comlet[i][j][k])
                {
                    check = true;
                    break;
                }
            }
        }

        if(!check) return i;
    }

    return 0;
} 

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    for(int i = 0; i < 7; i++)
        cin >> input[i];

    letterSize = input[0].size() / 6;

    for(int i = 0; i < 7; i++)
    {
        for(int j = 0; j < letterSize; j++)
        {
            for(int k = 0; k < 6; k++)
            {
                letter[j][i][k] = input[i][j * 6 + k];
            }
        }
    }

    for(int i = 0; i < letterSize; i++)
    {
        origin.push_back(imgtointeger(letter[i]));
    }

    if(!next_permutation(origin.begin(), origin.end()))
    {
        cout << "The End" << endl;
    }
    else
    {
        for(int i = 0; i < 7; i++)
        {
            for(int j = 0; j < letterSize; j++)
            {
                int localnum = origin[j];
                for(int k = 0; k < 6; k++)
                {
                    cout << comlet[localnum][i][k];
                }
            }
            cout << "\n";
        }
    }
    
    return 0;
}